inputs/input.10.1
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10
========================================
This it the input:
7 3 6 10 6 11 3 19 13 9 
And this is the sorted output:
19 13 11 10 9 7 6 6 3 3 
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10.2
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10
========================================
This it the input:
1 10 18 5 20 11 11 6 17 12 
And this is the sorted output:
20 18 17 12 11 11 10 6 5 1 
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10.3
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10
========================================
This it the input:
9 20 19 1 4 1 12 4 15 19 
And this is the sorted output:
20 19 19 15 12 9 4 4 1 1 
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10.4
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10
========================================
This it the input:
8 5 18 7 15 12 20 8 13 11 
And this is the sorted output:
20 18 15 13 12 11 8 8 7 5 
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10.5
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10
========================================
This it the input:
9 1 9 16 2 5 5 18 9 2 
And this is the sorted output:
18 16 9 9 9 5 5 2 2 1 
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.100.1
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.100.2
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
inputs/input.100.3
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.100.4
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.100.5
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.1000.1
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.1000.2
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.1000.3
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.1000.4
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.1000.5
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10000.1
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10000.2
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10000.3
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10000
========================================
Input is too large to display
Sorted output is too large to display
Checking if the output is actually sorted ...
	The output is sorted
========================================



inputs/input.10000.4
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10000
========================================
Input is too large to display
inputs/input.10000.5
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 10000
========================================
Input is too large to display
inputs/input.100000.1
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100000
========================================
Input is too large to display
inputs/input.100000.2
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100000
========================================
Input is too large to display
inputs/input.100000.3
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100000
========================================
Input is too large to display
inputs/input.100000.4
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100000
========================================
Input is too large to display
inputs/input.100000.5
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 100000
========================================
Input is too large to display
inputs/input.1000000.1
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000000
========================================
Input is too large to display
inputs/input.1000000.2
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000000
========================================
Input is too large to display
inputs/input.1000000.3
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000000
========================================
Input is too large to display
inputs/input.1000000.4
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000000
========================================
Input is too large to display
inputs/input.1000000.5
========================================
Trying some methods from the MinHeap class ....
You must check that the output is correct manually (or write code that does it automatically)
========================================
insert 700
MinHeap:- 1
700 
insert 500
MinHeap:- 2
500 700 
insert 100
MinHeap:- 3
100 700 500 
insert 800
MinHeap:- 4
100 700 500 800 
insert 200
MinHeap:- 5
100 200 500 800 700 
insert 400
MinHeap:- 6
100 200 400 800 700 500 
insert 900
MinHeap:- 7
100 200 400 800 700 500 900 
size: 7
Get and delete min element: 100
MinHeap:- 6
200 700 400 800 900 500 
Get and delete min element: 200
MinHeap:- 5
400 700 500 800 900 
Get and delete min element: 400
MinHeap:- 4
500 700 900 800 
========================================


========================================
Checking if HeapSort works ...
Input size: 1000000
========================================
Input is too large to display
